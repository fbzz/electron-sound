{"version":3,"sources":["RestaurantCard.js","RestaurantList.js","RestaurantPieChart.js","Home.js","Vote.js","RestaurantCrud.js","App.js","serviceWorker.js","index.js"],"names":["Meta","Card","RestaurantCard","_ref","rest","onVoteClickHandler","removeRestaurant","react_default","a","createElement","col","card","hoverable","className","span","style","width","margin","cover","height","alt","src","url","actions","icon","type","onClick","title","name","description","RestaurantList","restaurants","map","index","row","justify","key","idx","COLORS","RestaurantPieChart","chartData","partials","item","value","votes","es6","window","outerWidth","outerHeight","data","dataKey","nameKey","cx","cy","innerRadius","outerRadius","fill","entry","i","length","verticalAlign","socket","openSocket","process","secure","Home","state","userName","voteResult","undefined","loadingRestaurants","time","emit","_this2","this","on","console","log","setState","_","chunk","countdown","color","theme","Component","Vote","formItemLayout","labelCol","xs","sm","wrapperCol","tailFormItemLayout","offset","RestaurantCrud","restaurantName","restaurantImageUrl","loading","renderRestaurantImage","_this","onChangeRestaurantImageHandler","e","target","onClickSaveRestaurantHandler","_this$state","alert","onchangeRestaurantNameHandler","removeRestaurantHandler","restaurant","es_form","align","Item","Object","assign","label","input","placeholder","size","onChange","order","es_button","App","HashRouter","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gVAEQA,EAASC,IAATD,KAEOE,EAAA,SAAAC,GAAoD,IAAjDC,EAAiDD,EAAjDC,KAAMC,EAA2CF,EAA3CE,mBAAoBC,EAAuBH,EAAvBG,iBAC1C,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,WAAW,EACXC,UAAU,kBACVC,KAAM,EACNC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAC7BC,MACEX,EAAAC,EAAAC,cAAA,OACEM,MAAO,CAAEC,MAAK,OAAUG,OAAM,SAC9BC,IAAI,cACJC,IAAKjB,EAAKkB,MAGdC,QAAS,CACPlB,GACEE,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,KAAK,QAAQC,QAAS,kBAAMrB,EAAmBD,MAEvDE,GACEC,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,KAAK,SAASC,QAAS,kBAAMpB,EAAiBF,QAIxDG,EAAAC,EAAAC,cAACT,EAAD,CAAM2B,MAAOvB,EAAKwB,KAAMC,YAAazB,EAAKyB,iBCxBnCC,EAAA,SAAA3B,GAA2D,IAAxD4B,EAAwD5B,EAAxD4B,YAAa1B,EAA2CF,EAA3CE,mBAAoBC,EAAuBH,EAAvBG,iBACjD,OAAOyB,EAAYC,IAAI,SAACD,EAAaE,GACnC,OACE1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAKT,KAAK,OAAOU,QAAQ,SAASC,IAAKH,GACpCF,EAAYC,IAAI,SAAC5B,EAAMiC,GACtB,OACE9B,EAAAC,EAAAC,cAACP,EAAD,CACEkC,IAAKC,EACLzB,WAAW,EACXR,KAAMA,EACNC,mBAAoBA,EACpBC,iBAAkBA,kBCZ1BgC,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGaC,EAAA,SAAApC,GAAkB,IACzBqC,EADyBrC,EAAfsC,SACWT,IAAI,SAAAU,GAC7B,MAAO,CAAEd,KAAMc,EAAKd,KAAMe,MAAOD,EAAKE,SAGxC,OACErC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACE7B,MAAO8B,OAAOC,WACd5B,OAAQ2B,OAAOE,YACfnC,UAAU,mBAEVN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEI,KAAMT,EACNU,QAAQ,QACRC,QAAQ,OACRC,GAAI,MACJC,GAAI,MACJC,YAAa,GACbC,YAAa,GACbC,KAAK,WAEJhB,EAAUR,IAAI,SAACyB,EAAOC,GAAR,OACbnD,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMT,IAAKsB,EAAGF,KAAMlB,EAAOoB,EAAIpB,EAAOqB,aAG1CpD,EAAAC,EAAAC,cAACoC,EAAA,EAAD,MACAtC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAQe,cAAc,MAAMzC,OAAQ,0BCnCpC0C,UAASC,IAAWC,wCAAkC,CAC1DC,QAAQ,KAyEKC,6MArEbC,MAAQ,CACNC,SAAU,GACVpC,YAAa,GACbqC,gBAAYC,EACZC,oBAAoB,EACpBC,KAAM,MAiCRlE,mBAAqB,SAAAD,GACnByD,EAAOW,KAAK,OAAQpE,wFA/BD,IAAAqE,EAAAC,KACnBb,EAAOW,KAAK,OAAQ,IAEpBX,EAAOc,GAAG,aAAc,SAAA1B,GACtB2B,QAAQC,IAAI,aAAc5B,KAG5BY,EAAOc,GAAG,aAAc,SAAA1B,GACtB2B,QAAQC,IAAI5B,GACZwB,EAAKK,SAAS,CACZ/C,YAAagD,IAAEC,MAAM/B,EAAM,GAC3BqB,oBAAoB,MAIxBT,EAAOc,GAAG,YAAa,SAAA1B,GACrB2B,QAAQC,IAAI5B,GACZwB,EAAKK,SAAS,CAAEV,WAAYnB,MAG9BY,EAAOc,GAAG,oBAAqB,SAAA1B,GAC7B2B,QAAQC,IAAI5B,GACZwB,EAAKK,SAAS,CAAEV,WAAYnB,MAG9BY,EAAOc,GAAG,QAAS,SAAA1B,GACjBwB,EAAKK,SAAS,CAAEP,KAAMtB,EAAKgC,+CAS7B,OAAKP,KAAKR,MAAME,WAsBT7D,EAAAC,EAAAC,cAAC8B,EAAD,CAAoBE,SAAUiC,KAAKR,MAAME,WAAW3B,WApBvDlC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAKT,KAAK,OAAOU,QAAQ,UACvB5B,EAAAC,EAAAC,cAAA,MAAIM,MAAO,CAAEmE,MAAO,UAApB,+BACyBR,KAAKR,MAAMK,OAGtChE,EAAAC,EAAAC,cAACqB,EAAD,CACEC,YAAa2C,KAAKR,MAAMnC,YACxB1B,mBAAoBqE,KAAKrE,qBAE3BE,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAKT,KAAK,OAAOU,QAAQ,UACvB5B,EAAAC,EAAAC,cAAA,UAAQI,UAAU,UAChBN,EAAAC,EAAAC,cAAA,KAAGM,MAAO,CAAEmE,MAAO,UAAnB,aAA4C,IAC5C3E,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,KAAK,QAAQV,MAAO,CAAEmE,MAAO,OAASC,MAAM,WAAY,IAC9D5E,EAAAC,EAAAC,cAAA,KAAGM,MAAO,CAAEmE,MAAO,UAAnB,6BA5DKE,aCHJC,6MAPbnB,MAAQ,2EAGN,OAAO3D,EAAAC,EAAAC,cAAA,6BAJQ2E,wCCIbvB,EAASC,IAAWC,wCAAkC,CAC1DC,QAAQ,IAGJsB,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAE1E,KAAM,GACZ2E,GAAI,CAAE3E,KAAM,IAEd4E,WAAY,CACVF,GAAI,CAAE1E,KAAM,GACZ2E,GAAI,CAAE3E,KAAM,KAIV6E,EAAqB,CACzBD,WAAY,CACVF,GAAI,CACF1E,KAAM,EACN8E,OAAQ,GAEVH,GAAI,CACF3E,KAAM,EACN8E,OAAQ,KA8HCC,6MAxHb3B,MAAQ,CACN4B,eAAgB,GAChBC,wBAAoB1B,EACpB2B,SAAS,EACTjE,YAAa,MAefkE,sBAAwB,WACtB,GAAIC,EAAKhC,MAAM6B,mBACb,OACExF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,WAAW,EACXC,UAAU,kBACVC,KAAM,EACNC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAC7BC,MACEX,EAAAC,EAAAC,cAAA,OACEM,MAAO,CAAEC,MAAK,OAAUG,OAAM,SAC9BC,IAAI,cACJC,IAAK6E,EAAKhC,MAAM6B,0BAS5BI,+BAAiC,SAAAC,GAC/BF,EAAKpB,SAAS,CAAEiB,mBAAoBK,EAAEC,OAAO1D,WAG/C2D,6BAA+B,WAAM,IAAAC,EACYL,EAAKhC,MAA5C4B,EAD2BS,EAC3BT,eAAgBC,EADWQ,EACXR,mBAEnBD,GAAqC,KAAnBA,GACrBU,MAAM,mCAGHT,GAA6C,KAAvBA,GACzBS,MAAM,0CAGRN,EAAKpB,SAAS,CACZkB,SAAS,IAEXpB,QAAQC,IAAI,gCACZhB,EAAOW,KAAK,gBAAiB,CAAEsB,iBAAgBC,uBAE/CG,EAAKpB,SAAS,CACZgB,eAAgB,GAChBC,mBAAoB,QAIxBU,8BAAgC,SAAAL,GAC9BF,EAAKpB,SAAS,CAAEgB,eAAgBM,EAAEC,OAAO1D,WAG3C+D,wBAA0B,SAAAC,GACxB9C,EAAOW,KAAK,mBAAoBmC,wFAjEb,IAAAlC,EAAAC,KACnBb,EAAOW,KAAK,OAAQ,IAEpBX,EAAOc,GAAG,aAAc,SAAA1B,GACtB2B,QAAQC,IAAI5B,GACZwB,EAAKK,SAAS,CACZ/C,YAAagD,IAAEC,MAAM/B,EAAM,GAC3B+C,SAAS,uCA6DN,IACCA,EAAYtB,KAAKR,MAAjB8B,QACR,OACEzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMnF,KAAK,OAAOU,QAAQ,SAAS0E,MAAM,UACvCtG,EAAAC,EAAAC,cAACmG,EAAA,EAAKE,KAANC,OAAAC,OAAA,GAAe1B,EAAf,CAA+B2B,MAAM,wBACnC1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACEC,YAAY,sBACZC,KAAK,QACLC,SAAU3C,KAAK+B,8BACf9D,MAAO+B,KAAKR,MAAM4B,kBAGtBvF,EAAAC,EAAAC,cAACmG,EAAA,EAAKE,KAANC,OAAAC,OAAA,GAAe1B,EAAf,CAA+B2B,MAAM,0BACnC1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACEC,YAAY,wBACZC,KAAK,QACLC,SAAU3C,KAAKyB,+BACfxD,MAAO+B,KAAKR,MAAM6B,sBAGtBxF,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAKoF,MAAO,GACV/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAMgE,KAAKuB,0BAEb1F,EAAAC,EAAAC,cAACmG,EAAA,EAAKE,KAASnB,EACbpF,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CACE9F,KAAK,UACL2F,KAAK,QACL1F,QAASgD,KAAK4B,6BACdN,QAASA,GAJX,eAUJzF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqB,EAAD,CACEC,YAAa2C,KAAKR,MAAMnC,YACxBzB,iBAAkBoE,KAAKgC,kCAlHJtB,wCCbdoC,2LAZX,OACEjH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,KACElH,EAAAC,EAAAC,cAACiH,EAAA,EAAD,KACEnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7D,IACjC1D,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWzC,IAC/B9E,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOE,KAAK,kBAAkBC,UAAWjC,aAPjCT,cCKE2C,QACW,cAA7BjF,OAAOkF,SAASC,UAEe,UAA7BnF,OAAOkF,SAASC,UAEhBnF,OAAOkF,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7H,EAAAC,EAAAC,cAAC4H,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.26a02c6c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Card, Icon } from \"antd\";\nconst { Meta } = Card;\n\nexport default ({ rest, onVoteClickHandler, removeRestaurant }) => {\n  return (\n    <Col>\n      <Card\n        hoverable={true}\n        className=\"animated fadeIn\"\n        span={4}\n        style={{ width: 300, margin: 10 }}\n        cover={\n          <img\n            style={{ width: `100%`, height: `200px` }}\n            alt=\"restaurante\"\n            src={rest.url}\n          />\n        }\n        actions={[\n          onVoteClickHandler && (\n            <Icon type=\"check\" onClick={() => onVoteClickHandler(rest)} />\n          ),\n          removeRestaurant && (\n            <Icon type=\"delete\" onClick={() => removeRestaurant(rest)} />\n          )\n        ]}\n      >\n        <Meta title={rest.name} description={rest.description} />\n      </Card>\n    </Col>\n  );\n};\n","import React from \"react\";\nimport { Row } from \"antd\";\nimport RestaurantCard from \"./RestaurantCard\";\n\nexport default ({ restaurants, onVoteClickHandler, removeRestaurant }) => {\n  return restaurants.map((restaurants, index) => {\n    return (\n      <Row type=\"flex\" justify=\"center\" key={index}>\n        {restaurants.map((rest, idx) => {\n          return (\n            <RestaurantCard\n              key={idx}\n              hoverable={true}\n              rest={rest}\n              onVoteClickHandler={onVoteClickHandler}\n              removeRestaurant={removeRestaurant}\n            />\n          );\n        })}\n      </Row>\n    );\n  });\n};\n","import React from \"react\";\nimport { PieChart, Pie, Legend, Tooltip, Cell } from \"recharts\";\n\nconst COLORS = [\n  \"#0000FF\",\n  \"#000080\",\n  \"#FF00FF\",\n  \"#800080\",\n  \"#FF5733\",\n  \"#36FF33\",\n  \"#FF9C33\",\n  \"#F3FF33\",\n  \"#33B5FF\",\n  \"#33FFCA\",\n  \"#9633FF\",\n  \"#FF339F\"\n];\n\nexport default ({ partials }) => {\n  const chartData = partials.map(item => {\n    return { name: item.name, value: item.votes };\n  });\n\n  return (\n    <PieChart\n      width={window.outerWidth}\n      height={window.outerHeight}\n      className=\"animated fadeIn\"\n    >\n      <Pie\n        data={chartData}\n        dataKey=\"value\"\n        nameKey=\"name\"\n        cx={\"50%\"}\n        cy={\"20%\"}\n        innerRadius={60}\n        outerRadius={80}\n        fill=\"#8884d8\"\n      >\n        {chartData.map((entry, i) => (\n          <Cell key={i} fill={COLORS[i % COLORS.length]} />\n        ))}\n      </Pie>\n      <Tooltip />\n      <Legend verticalAlign=\"top\" height={150} />\n    </PieChart>\n  );\n};\n","import React, { Component } from \"react\";\nimport openSocket from \"socket.io-client\";\nimport { Row, Icon } from \"antd\";\nimport RestaurantList from \"./RestaurantList\";\nimport RestaurantPieChart from \"./RestaurantPieChart\";\nimport _ from \"lodash\";\n\nimport \"./animated.css\";\n\nconst socket = openSocket(process.env.REACT_APP_PUBLIC_URL, {\n  secure: true\n});\n\nclass Home extends Component {\n  state = {\n    userName: \"\",\n    restaurants: [],\n    voteResult: undefined,\n    loadingRestaurants: true,\n    time: \"\"\n  };\n\n  componentWillMount() {\n    socket.emit(\"name\", \"\");\n\n    socket.on(\"userJoined\", data => {\n      console.log(\"userJoined\", data);\n    });\n\n    socket.on(\"restaurant\", data => {\n      console.log(data);\n      this.setState({\n        restaurants: _.chunk(data, 3),\n        loadingRestaurants: false\n      });\n    });\n\n    socket.on(\"userVoted\", data => {\n      console.log(data);\n      this.setState({ voteResult: data });\n    });\n\n    socket.on(\"userVotedRejected\", data => {\n      console.log(data);\n      this.setState({ voteResult: data });\n    });\n\n    socket.on(\"timer\", data => {\n      this.setState({ time: data.countdown });\n    });\n  }\n\n  onVoteClickHandler = rest => {\n    socket.emit(\"vote\", rest);\n  };\n\n  render() {\n    if (!this.state.voteResult)\n      return (\n        <div>\n          <Row type=\"flex\" justify=\"center\">\n            <h2 style={{ color: \"white\" }}>\n              Final da votação em : {this.state.time}\n            </h2>\n          </Row>\n          <RestaurantList\n            restaurants={this.state.restaurants}\n            onVoteClickHandler={this.onVoteClickHandler}\n          />\n          <Row type=\"flex\" justify=\"center\">\n            <footer className=\"footer\">\n              <b style={{ color: \"white\" }}>Made with</b>{\" \"}\n              <Icon type=\"heart\" style={{ color: \"red\" }} theme=\"filled\" />{\" \"}\n              <b style={{ color: \"white\" }}>by the Fin Team</b>\n            </footer>\n          </Row>\n        </div>\n      );\n\n    return <RestaurantPieChart partials={this.state.voteResult.partials} />;\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass Vote extends Component {\n  state = {};\n\n  render() {\n    return <div>Votacao</div>;\n  }\n}\n\nexport default Vote;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button, Card, Row, Col } from \"antd\";\nimport RestaurantList from \"./RestaurantList\";\nimport _ from \"lodash\";\nimport openSocket from \"socket.io-client\";\n\nconst socket = openSocket(process.env.REACT_APP_PUBLIC_URL, {\n  secure: true\n});\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 8 },\n    sm: { span: 8 }\n  },\n  wrapperCol: {\n    xs: { span: 8 },\n    sm: { span: 8 }\n  }\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 6,\n      offset: 8\n    },\n    sm: {\n      span: 6,\n      offset: 8\n    }\n  }\n};\n\nclass RestaurantCrud extends Component {\n  state = {\n    restaurantName: \"\",\n    restaurantImageUrl: undefined,\n    loading: false,\n    restaurants: []\n  };\n\n  componentWillMount() {\n    socket.emit(\"name\", \"\");\n\n    socket.on(\"restaurant\", data => {\n      console.log(data);\n      this.setState({\n        restaurants: _.chunk(data, 3),\n        loading: false\n      });\n    });\n  }\n\n  renderRestaurantImage = () => {\n    if (this.state.restaurantImageUrl)\n      return (\n        <Card\n          hoverable={true}\n          className=\"animated fadeIn\"\n          span={4}\n          style={{ width: 300, margin: 10 }}\n          cover={\n            <img\n              style={{ width: `100%`, height: `200px` }}\n              alt=\"restaurante\"\n              src={this.state.restaurantImageUrl}\n            />\n          }\n        />\n      );\n\n    return undefined;\n  };\n\n  onChangeRestaurantImageHandler = e => {\n    this.setState({ restaurantImageUrl: e.target.value });\n  };\n\n  onClickSaveRestaurantHandler = () => {\n    const { restaurantName, restaurantImageUrl } = this.state;\n\n    if (!restaurantName || restaurantName === \"\") {\n      alert(\"preencha o nome do restaurante!\");\n    }\n\n    if (!restaurantImageUrl || restaurantImageUrl === \"\") {\n      alert(\"coloque uma imagem para o restaurante!\");\n    }\n\n    this.setState({\n      loading: true\n    });\n    console.log(\"onClickSaveRestaurantHandler\");\n    socket.emit(\"addRestaurant\", { restaurantName, restaurantImageUrl });\n\n    this.setState({\n      restaurantName: \"\",\n      restaurantImageUrl: \"\"\n    });\n  };\n\n  onchangeRestaurantNameHandler = e => {\n    this.setState({ restaurantName: e.target.value });\n  };\n\n  removeRestaurantHandler = restaurant => {\n    socket.emit(\"removeRestaurant\", restaurant);\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div>\n        <Form type=\"flex\" justify=\"center\" align=\"middle\">\n          <Form.Item {...formItemLayout} label=\"Nome do restaurante\">\n            <Input\n              placeholder=\"Nome do restaurante\"\n              size=\"large\"\n              onChange={this.onchangeRestaurantNameHandler}\n              value={this.state.restaurantName}\n            />\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"Imagem do restaurante\">\n            <Input\n              placeholder=\"Imagem do restaurante\"\n              size=\"large\"\n              onChange={this.onChangeRestaurantImageHandler}\n              value={this.state.restaurantImageUrl}\n            />\n          </Form.Item>\n          <Row order={3}>\n            <Col>{this.renderRestaurantImage()}</Col>\n          </Row>\n          <Form.Item {...tailFormItemLayout}>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              onClick={this.onClickSaveRestaurantHandler}\n              loading={loading}\n            >\n              Cadastrar\n            </Button>\n          </Form.Item>\n        </Form>\n        <br />\n        <RestaurantList\n          restaurants={this.state.restaurants}\n          removeRestaurant={this.removeRestaurantHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RestaurantCrud;\n","import React, { Component } from \"react\";\nimport Home from \"./Home\";\nimport Vote from \"./Vote\";\nimport RestaurantCrud from \"./RestaurantCrud\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport './index.css';\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/vote\" component={Vote} />\n          <Route path=\"/restaurant-new\" component={RestaurantCrud} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}