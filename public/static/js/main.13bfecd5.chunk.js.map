{"version":3,"sources":["RestaurantCard.js","RestaurantList.js","RestaurantPieChart.js","Home.js","Vote.js","RestaurantCrud.js","App.js","serviceWorker.js","index.js"],"names":["Meta","Card","RestaurantCard","_ref","rest","onVoteClickHandler","react_default","a","createElement","col","card","hoverable","className","span","style","width","margin","cover","height","alt","src","url","actions","icon","type","onClick","title","name","description","RestaurantList","restaurants","map","index","row","justify","key","idx","id","COLORS","RestaurantPieChart","chartData","partials","item","value","votes","es6","window","outerWidth","outerHeight","data","dataKey","nameKey","cx","cy","innerRadius","outerRadius","fill","entry","i","length","verticalAlign","socket","openSocket","process","secure","Home","state","userName","voteResult","undefined","loadingRestaurants","time","emit","_this2","this","on","console","log","setState","_","chunk","countdown","color","theme","Component","Vote","formItemLayout","labelCol","xs","sm","wrapperCol","tailFormItemLayout","offset","RestaurantCrud","restaurantName","restaurantImageUrl","loading","renderRestaurantImage","_this","onChangeRestaurantImageHandler","e","target","onClickSaveRestaurantHandler","_this$state","alert","onchangeRestaurantNameHandler","es_form","align","Item","Object","assign","label","input","placeholder","size","onChange","order","es_button","App","HashRouter","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13bfecd5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Card, Icon } from \"antd\";\nconst { Meta } = Card;\n\nexport default ({ rest, onVoteClickHandler }) => {\n  return (\n    <Col>\n      <Card\n        hoverable={true}\n        className=\"animated fadeIn\"\n        span={4}\n        style={{ width: 300, margin: 10 }}\n        cover={\n          <img\n            style={{ width: `100%`, height: `200px` }}\n            alt=\"restaurante\"\n            src={rest.url}\n          />\n        }\n        actions={[\n          <Icon type=\"check\" onClick={() => onVoteClickHandler(rest)} />\n        ]}\n      >\n        <Meta title={rest.name} description={rest.description} />\n      </Card>\n    </Col>\n  );\n};\n","import React from \"react\";\nimport { Row } from \"antd\";\nimport RestaurantCard from \"./RestaurantCard\";\n\nexport default ({ restaurants, onVoteClickHandler }) => {\n  return restaurants.map((restaurants, index) => {\n    return (\n      <Row type=\"flex\" justify=\"center\" key={index}>\n        {restaurants.map((rest, idx) => {\n          return (\n            <RestaurantCard\n              key={rest.id}\n              hoverable={true}\n              rest={rest}\n              onVoteClickHandler={onVoteClickHandler}\n            />\n          );\n        })}\n      </Row>\n    );\n  });\n};\n","import React from \"react\";\nimport { PieChart, Pie, Legend, Tooltip, Cell } from \"recharts\";\n\nconst COLORS = [\n  \"#0000FF\",\n  \"#000080\",\n  \"#FF00FF\",\n  \"#800080\",\n  \"#FF5733\",\n  \"#36FF33\",\n  \"#FF9C33\",\n  \"#F3FF33\",\n  \"#33B5FF\",\n  \"#33FFCA\",\n  \"#9633FF\",\n  \"#FF339F\"\n];\n\nexport default ({ partials }) => {\n  const chartData = partials.map(item => {\n    return { name: item.name, value: item.votes };\n  });\n\n  return (\n    <PieChart\n      width={window.outerWidth}\n      height={window.outerHeight}\n      className=\"animated fadeIn\"\n    >\n      <Pie\n        data={chartData}\n        dataKey=\"value\"\n        nameKey=\"name\"\n        cx={\"50%\"}\n        cy={\"20%\"}\n        innerRadius={60}\n        outerRadius={80}\n        fill=\"#8884d8\"\n      >\n        {chartData.map((entry, i) => (\n          <Cell key={i} fill={COLORS[i % COLORS.length]} />\n        ))}\n      </Pie>\n      <Tooltip />\n      <Legend verticalAlign=\"top\" height={150} />\n    </PieChart>\n  );\n};\n","import React, { Component } from \"react\";\nimport openSocket from \"socket.io-client\";\nimport { Row, Col, Icon, Input } from \"antd\";\nimport RestaurantList from \"./RestaurantList\";\nimport RestaurantPieChart from \"./RestaurantPieChart\";\nimport _ from \"lodash\";\n\nimport \"./animated.css\";\nimport { hidden } from \"ansi-colors\";\n\nconst socket = openSocket(process.env.REACT_APP_PUBLIC_URL, {\n  secure: true\n});\n\nclass Home extends Component {\n  state = {\n    userName: \"\",\n    restaurants: [],\n    voteResult: undefined,\n    loadingRestaurants: true,\n    time: ''\n  };\n  \n\n  componentWillMount() {\n \n    socket.emit(\"name\", \"\");\n\n    socket.on(\"userJoined\", data => {\n      console.log(\"userJoined\", data);\n    });\n\n    socket.on(\"restaurant\", data => {\n      console.log(data);\n      this.setState({\n        restaurants: _.chunk(data, 3),\n        loadingRestaurants: false\n      });\n    });\n\n    socket.on(\"userVoted\", data => {\n      console.log(data);\n      this.setState({ voteResult: data });\n    });\n\n    socket.on(\"userVotedRejected\", data => {\n      console.log(data);\n      this.setState({ voteResult: data });\n    });\n\n    socket.on(\"timer\", data => {\n      this.setState({time : data.countdown }) \n    });\n  }\n\n  onVoteClickHandler = rest => {\n    socket.emit(\"vote\", rest);\n  };\n\n\n\n  render() {\n    if (!this.state.voteResult)\n      return (\n        <div>\n                 <Row  type=\"flex\" justify=\"center\" >\n          <h2 style={{color: 'white'}}>Final da votação em : {this.state.time}</h2>\n          </Row>\n        <RestaurantList\n          restaurants={this.state.restaurants}\n          onVoteClickHandler={this.onVoteClickHandler}\n        />\n             <Row type=\"flex\" justify=\"center\" >\n        <footer className=\"footer\"><b style={{color: 'white'}}>Made with</b> <Icon type=\"heart\"  style={{color: 'red'}} theme=\"filled\" /> <b style={{color: 'white'}}>by the Fin Team</b></footer>\n       </Row>\n        </div>\n      );\n\n    return <RestaurantPieChart partials={this.state.voteResult.partials} />;\n    \n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass Vote extends Component {\n  state = {};\n\n  render() {\n    return <div>Votacao</div>;\n  }\n}\n\nexport default Vote;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button, Card, Row, Col } from \"antd\";\nimport axios from \"axios\";\nimport openSocket from \"socket.io-client\";\n\nconst socket = openSocket(process.env.REACT_APP_PUBLIC_URL, {\n  secure: true\n});\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 8 },\n    sm: { span: 8 }\n  },\n  wrapperCol: {\n    xs: { span: 8 },\n    sm: { span: 8 }\n  }\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 6,\n      offset: 8\n    },\n    sm: {\n      span: 6,\n      offset: 8\n    }\n  }\n};\n\nclass RestaurantCrud extends Component {\n  state = {\n    restaurantName: \"\",\n    restaurantImageUrl: undefined,\n    loading: false\n  };\n\n  componentWillMount() {\n    socket.on(\"restaurant\", data => {\n      console.log(data);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  renderRestaurantImage = () => {\n    if (this.state.restaurantImageUrl)\n      return (\n        <Card\n          hoverable={true}\n          className=\"animated fadeIn\"\n          span={4}\n          style={{ width: 300, margin: 10 }}\n          cover={\n            <img\n              style={{ width: `100%`, height: `200px` }}\n              alt=\"restaurante\"\n              src={this.state.restaurantImageUrl}\n            />\n          }\n        />\n      );\n\n    return undefined;\n  };\n\n  onChangeRestaurantImageHandler = e => {\n    this.setState({ restaurantImageUrl: e.target.value });\n  };\n\n  onClickSaveRestaurantHandler = () => {\n    const { restaurantName, restaurantImageUrl } = this.state;\n\n    if (!restaurantName || restaurantName === \"\") {\n      alert(\"preencha o nome do restaurante!\");\n    }\n\n    if (!restaurantImageUrl || restaurantImageUrl === \"\") {\n      alert(\"coloque uma imagem para o restaurante!\");\n    }\n\n    this.setState({\n      loading: true\n    });\n    console.log(\"onClickSaveRestaurantHandler\");\n    socket.emit(\"addRestaurant\", { restaurantName, restaurantImageUrl });\n  };\n\n  onchangeRestaurantNameHandler = e => {\n    this.setState({ restaurantName: e.target.value });\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <Form type=\"flex\" justify=\"center\" align=\"middle\">\n        <Form.Item {...formItemLayout} label=\"Nome do restaurante\">\n          <Input\n            placeholder=\"Nome do restaurante\"\n            size=\"large\"\n            onChange={this.onchangeRestaurantNameHandler}\n            value={this.state.restaurantName}\n          />\n        </Form.Item>\n        <Form.Item {...formItemLayout} label=\"Imagem do restaurante\">\n          <Input\n            placeholder=\"Imagem do restaurante\"\n            size=\"large\"\n            onChange={this.onChangeRestaurantImageHandler}\n            value={this.state.restaurantImageUrl}\n          />\n        </Form.Item>\n        <Row order={3}>\n          <Col>{this.renderRestaurantImage()}</Col>\n        </Row>\n        <Form.Item {...tailFormItemLayout}>\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            onClick={this.onClickSaveRestaurantHandler}\n            loading={loading}\n          >\n            Cadastrar\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default RestaurantCrud;\n","import React, { Component } from \"react\";\nimport Home from \"./Home\";\nimport Vote from \"./Vote\";\nimport RestaurantCrud from \"./RestaurantCrud\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport './index.css';\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/vote\" component={Vote} />\n          <Route path=\"/restaurant-new\" component={RestaurantCrud} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}